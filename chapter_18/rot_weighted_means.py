#
#  file: rot_weighted_means.py
#
#  Weighted means of classical model performance
#
#  RTK, 15-Jan-2024
#  Last update:  15-Jan-2024
#
################################################################

import numpy as np

d = np.array([
    [0.4312,0.4349,0.4173,0.4268,0.4719,0.5116,0.6207],
    [0.4336,0.4232,0.3734,0.3790,0.4506,0.4921,0.5796],
    [0.4713,0.4579,0.3792,0.3814,0.4618,0.5029,0.5929],
    [0.3837,0.3834,0.4592,0.4795,0.4635,0.4926,0.6016],
    [0.3744,0.3766,0.4229,0.4323,0.4625,0.4937,0.5962],
    [0.3384,0.3418,0.3622,0.3909,0.4328,0.4589,0.5672],
    [0.2606,0.2798,0.3227,0.3399,0.4338,0.4507,0.5367],
])

w = np.array([1,2,3,4,5,6,7])
w = w / w.sum()

s = ['rot','rot16','rot32','blend','iproc 0','iproc 1','raw']

for i in range(len(d)):
    print("%7s: %6.4f" % (s[i], (d[i]*w).sum()))

